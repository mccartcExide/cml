@model CML.Models.SampleModel
<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Create</title>
</head>
<body>
    @using ( Html.BeginForm( "Create", "Samples", FormMethod.Post, new { id = "sampleForm" } ) )
    {

        <div class="Request-Nav Top">
            <span>
                <input type="button" id="btnTest" class="k-button k-primary " style=" margin:5px;" value="Back"
                       onclick="location.href='@Url.Action("Index", "Test")'" />
            </span>
            <span class="float-right">
                <input type="button" id="btnSub" value="Submit" style=" margin:5px;" class="k-button k-primary" />
                <input type="button" id="btnSave" value="Save & Stay" style=" margin:5px;" class="k-button k-primary" />

            </span>
        </div>

        <div class="form-horizontal">
            <table class="table req-new">
                <tr>
                    <td>
                        <div class="form-group">
                            @Html.LabelFor( model => model.ID, htmlAttributes: new { @class = " control-label col-md-2" } )
                            <div class="col-md-10">

                                @Html.EditorFor( model => model.ID, new { htmlAttributes = new { @class = "k-textbox form-control", @readonly = "readonly" } } )

                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="form-group">
                            @Html.LabelFor( model => model.SampleType, htmlAttributes: new { @class = "control-label col-md-2" } )
                            <div class="col-md-10">
                                @(Html.Kendo().DropDownListFor( model => model.SampleType )
                                                                                                                                 .Name( "SampleType" )
                                                                                                                                 .OptionLabel( "Please select" )
                                                                                                                                 .DataTextField( "Text" )
                                                                                                                                 .DataValueField( "Value" )
                                                                                                                                 .BindTo( ViewData["sampletypes"] as SelectList )
                                                                                                                                 .Events( ev => { ev.Change( "typesChanged" ); } )

                                )
                                @* @(Html.EditorFor(model => model.AssignedTo));*@
                                @Html.ValidationMessageFor( model => model.SampleType, "", new { @class = "text-danger" } )
                            </div>
                        </div>


                    </td>
                </tr>
                <tr>
                    <td>
                        <div class="form-group">
                            @Html.LabelFor( model => model.TotalSamples, htmlAttributes: new { @class = " control-label col-md-2" } )
                            <div class="col-md-10">

                                @Html.EditorFor( model => model.TotalSamples, new { htmlAttributes = new { @class = "k-textbox form-control", @readonly = "readonly" } } )

                            </div>
                        </div>
                    </td>
                    <td>
                        <div class="form-group">
                            @Html.LabelFor( model => model.TestID, htmlAttributes: new { @class = " control-label col-md-2" } )
                            <div class="col-md-10">

                                @Html.EditorFor( model => model.TestID, new { htmlAttributes = new { @class = "k-textbox form-control", @readonly = "readonly" } } )

                            </div>
                        </div>
                    </td>
                </tr>
                

            </table>
            <div id="dvStandard">
                <table class="table req-new">
                    <tr>
                        <td>
                            <div class="form-group" id="dvOxide">
                                @Html.LabelFor( model => model.OxideType, htmlAttributes: new { @class = "control-label col-md-2" } )
                                <div class="col-md-10">
                                    @(Html.Kendo().DropDownListFor( model => model.OxideType )
                                                                .Name( "OxideType" )
                                                                .OptionLabel( "Please select" )
                                                                .DataTextField( "Text" )
                                                                .DataValueField( "Value" )
                                                                .BindTo( new List<SelectListItem>() {
                                                                                          new SelectListItem() {
                                                                                              Text = "Leady",
                                                                                              Value = "Leady"
                                                                                          },
                                                                                          new SelectListItem() {
                                                                                              Text = "Red",
                                                                                              Value = "Red"
                                                                                          }
                                                                      } )


                                    )
                                    @* @(Html.EditorFor(model => model.AssignedTo));*@
                                    @Html.ValidationMessageFor( model => model.SampleType, "", new { @class = "text-danger" } )
                                </div>
                            </div>
                            <div class="form-group" id="dvSeparator">
                                @Html.LabelFor( model => model.SeperatorType, htmlAttributes: new { @class = "control-label col-md-2" } )
                                <div class="col-md-10">
                                    @(Html.Kendo().DropDownListFor( model => model.SeperatorType )
                                                                .Name( "SeparatorType" )
                                                                .OptionLabel( "Please select" )
                                                                .DataTextField( "Text" )
                                                                .DataValueField( "Value" )
                                                                .BindTo( new List<SelectListItem>() {
                                                                                          new SelectListItem() {
                                                                                              Text = "Glass",
                                                                                              Value = "Glass"
                                                                                          },
                                                                                          new SelectListItem() {
                                                                                              Text = "Poly",
                                                                                              Value = "Poly"
                                                                                          }
                                                                      } )


                                    )
                                    @* @(Html.EditorFor(model => model.AssignedTo));*@
                                    @Html.ValidationMessageFor( model => model.SampleType, "", new { @class = "text-danger" } )
                                </div>
                            </div>


                        </td>
                        <td></td>
                    </tr>
                    <tr>
                        <td><div class="form-group">
    @Html.LabelFor( model => model.Number, htmlAttributes: new { @class = " control-label col-md-2" } )
    <div class="col-md-10">

        @Html.EditorFor( model => model.Number, new { htmlAttributes = new { @class = "k-textbox form-control"} } )

    </div>
</div></td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor( model => model.SampleIDs, htmlAttributes: new { @class = " control-label col-md-2" } )
                                <div class="col-md-10">

                                    @Html.EditorFor( model => model.SampleIDs, new { htmlAttributes = new { @class = "k-textbox form-control" } } )

                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td><div class="form-group">
    @Html.LabelFor( model => model.SampleDesc, htmlAttributes: new { @class = " control-label col-md-2" } )
    <div class="col-md-10">

        @Html.TextAreaFor( model => model.SampleDesc, new { @rows = "5", @cols = "50" } )

    </div>
</div></td>
                        <td></td>
                    </tr>
                </table>
            </div>

            <div id="dvPlates">
                <table class="table req-new">
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor( model => model.PosStandardNbr, htmlAttributes: new { @class = " control-label col-md-2" } )
                                <div class="col-md-10">

                                    @Html.EditorFor( model => model.PosStandardNbr, new { htmlAttributes = new { @class = "k-textbox form-control" } } )

                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor( model => model.PosStandardIDs, htmlAttributes: new { @class = " control-label col-md-2" } )
                                <div class="col-md-10">

                                    @Html.EditorFor( model => model.PosStandardIDs, new { htmlAttributes = new { @class = "k-textbox form-control" } } )

                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor( model => model.PosTMBNbr, htmlAttributes: new { @class = " control-label col-md-2" } )
                                <div class="col-md-10">

                                    @Html.EditorFor( model => model.PosTMBNbr, new { htmlAttributes = new { @class = "k-textbox form-control" } } )

                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor( model => model.PosTMBIds, htmlAttributes: new { @class = " control-label col-md-2" } )
                                <div class="col-md-10">

                                    @Html.EditorFor( model => model.PosTMBIds, new { htmlAttributes = new { @class = "k-textbox form-control" } } )

                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor( model => model.PosOtherNumber, htmlAttributes: new { @class = " control-label col-md-2" } )
                                <div class="col-md-10">

                                    @Html.EditorFor( model => model.PosOtherNumber, new { htmlAttributes = new { @class = "k-textbox form-control" } } )

                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor( model => model.PosOtherID, htmlAttributes: new { @class = " control-label col-md-2" } )
                                <div class="col-md-10">

                                    @Html.EditorFor( model => model.PosOtherID, new { htmlAttributes = new { @class = "k-textbox form-control" } } )

                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor( model => model.PosComment, htmlAttributes: new { @class = " control-label col-md-2" } )
                                <div class="col-md-10">

                                    @Html.TextAreaFor( model => model.PosComment, new {  @rows = "5", @cols = "50" } )

                                </div>
                            </div>
                        </td>
                        <td></td>
                    </tr>
                    <!-- NEGATIVE-->
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor( model => model.NegStandardNbr, htmlAttributes: new { @class = " control-label col-md-2" } )
                                <div class="col-md-10">

                                    @Html.EditorFor( model => model.NegStandardNbr, new { htmlAttributes = new { @class = "k-textbox form-control" } } )

                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor( model => model.NegStandardIDs, htmlAttributes: new { @class = " control-label col-md-2" } )
                                <div class="col-md-10">

                                    @Html.EditorFor( model => model.NegStandardIDs, new { htmlAttributes = new { @class = "k-textbox form-control" } } )

                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor( model => model.NegTMBNbr, htmlAttributes: new { @class = " control-label col-md-2" } )
                                <div class="col-md-10">

                                    @Html.EditorFor( model => model.NegTMBNbr, new { htmlAttributes = new { @class = "k-textbox form-control" } } )

                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor( model => model.NegTMBIds, htmlAttributes: new { @class = " control-label col-md-2" } )
                                <div class="col-md-10">

                                    @Html.EditorFor( model => model.NegTMBIds, new { htmlAttributes = new { @class = "k-textbox form-control" } } )

                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor( model => model.NegOtherNumber, htmlAttributes: new { @class = " control-label col-md-2" } )
                                <div class="col-md-10">

                                    @Html.EditorFor( model => model.NegOtherNumber, new { htmlAttributes = new { @class = "k-textbox form-control" } } )

                                </div>
                            </div>
                        </td>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor( model => model.NegOtherID, htmlAttributes: new { @class = " control-label col-md-2" } )
                                <div class="col-md-10">

                                    @Html.EditorFor( model => model.NegOtherID, new { htmlAttributes = new { @class = "k-textbox form-control" } } )

                                </div>
                            </div>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <div class="form-group">
                                @Html.LabelFor( model => model.NegComment, htmlAttributes: new { @class = " control-label col-md-2" } )
                                <div class="col-md-10">

                                    @Html.TextAreaFor( model => model.NegComment, new { @rows = "5", @cols = "50" } )

                                </div>
                            </div>
                        </td>
                        <td></td>
                    </tr>
                </table>
            </div>
           
        </div>

    }

    <script>

        $(document).ready(function () {
            $('#dvStandard').hide();
            $('#dvPlates').hide();
           
        })

        function typesChanged(e) {
            var ddl = $('#SampleType').data("kendoDropDownList");
           
            var newValue = ddl.text();

            if (newValue == 'Formed Plate' || newValue == 'Unformed Plate' || newValue == 'Grids' || newValue == 'Straps'
                || newValue == 'Posts' || newValue == 'Welds' || newValue == 'Lugs') {

                $('#dvPlates').show();
                $('#dvStandard').hide();
               

            } else if (newValue == 'Oxide') {
                $('#dvPlates').hide();
                $('#dvStandard').show();
                $('#dvOxide').show();
                $('#dvSeparator').hide();

            } else if (newValue == 'Separator') {
                $('#dvPlates').hide();
                $('#dvStandard').show();
                $('#dvOxide').hide();
                $('#dvSeparator').show();
               
            } else {
                $('#dvPlates').hide();
                $('#dvStandard').show();
                $('#dvOxide').hide();
                $('#dvSeparator').hide();
                

            }


         
        }
    </script>
</body>
</html>

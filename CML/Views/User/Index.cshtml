
@(Html.Kendo().Grid<CML.Models.UserModel>()
      .Name("grid")
      .Columns(columns =>
      {
          columns.Bound(c => c.UserID);
          columns.Bound(c => c.Email);
          columns.Bound(c => c.DisplayName);
          //columns.ForeignKey(l=>l.RoleTypeID,(System.Collections.IEnumerable)ViewData["roletypes"],"ID","RoleType")
          // .Title("Role Type").Width(200);
          //columns.Bound(c => c.RoleTypeID);
          columns.Command(command => { command.Edit(); command.Destroy(); }).Width(180);
      })
      .ToolBar(toolbar => {
          toolbar.Create();
          toolbar.Excel();
      })
      .ColumnMenu()
      .Editable(editable => editable.Mode(GridEditMode.InLine))
      .Pageable()
      .Navigatable()
       .HtmlAttributes( new { style = "height: 450px;" } )
      .Selectable(selectable => {
          selectable.Mode(GridSelectionMode.Single);
          selectable.Type(GridSelectionType.Row);
      })
      .Sortable(sortable => {
          sortable.SortMode(GridSortMode.SingleColumn);
      })
      .Filterable()
      .Scrollable()
      .DataSource(dataSource => dataSource
          .Ajax()
          .Model(model => model.Id(p => p.ID))
          .Read(read => read.Action("CML_User_Read", "User"))
          .Create(create => create.Action("CML_User_Create", "User"))
          .Update(update => update.Action("CML_User_Update", "User"))
          .Destroy(destroy => destroy.Action("CML_User_Destroy", "User"))
      )
)

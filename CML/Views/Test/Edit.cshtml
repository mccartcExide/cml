@model CML.Models.TestModel


<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Step</title>
</head>
<body>
    @using (Html.BeginForm("Update", "Test", FormMethod.Post, new {id = "testForm" }))
    {<div class="Request-Nav Top">


    <span>
        <input type="button" class="k-button k-primary" style=" margin:5px;" value="Add Sample"
               onclick="location.href='@Url.Action("Create", "Samples",new { id = Model.TestID })'" />
    </span>
    <span>
        <input type="button" class="k-button k-primary" style=" margin:5px;" value="Start Test"
               onclick="location.href='@Url.Action("CreateTest", "Request",new { id = Model.TestID })'" />
    </span>
    <span>
        <input type="button" class="k-button k-primary" style=" margin:5px;" value="Complete Test"
               onclick="location.href='@Url.Action("CancelApproval", "Request",new { id = Model.TestID })'" />
    </span>
    <span>
        <input type="button" class="k-button k-primary" style=" margin:5px;" value="Delete Test"
               onclick="location.href='@Url.Action("Destroy", "Request",new { id = Model.TestID })'" />
    </span>

    <span>
        <input type="button" id="btnTest" class="k-button k-primary " style=" margin:5px;" value="Back to List"
               onclick="location.href='@Url.Action("Index", "Test")'" />
    </span>
    <span>
        <input type="button" id="btnRequest" class="k-button k-primary " style=" margin:5px;" value="Back to Request"
               onclick="location.href='@Url.Action("Edit", "Request",new { id= Model.CMLRequest })'" />
    </span>



    <span class="float-right">
        <input type="button" id="btnSub" value="Submit"   style=" margin:5px;" class="k-button k-primary" />
        <input type="button" id="btnSave" value="Save & Stay" style=" margin:5px;" class="k-button k-primary" />

    </span>

</div>
     <div class="form-horizontal">


         <table class="table req-new">
             <tr>
                 <td>
                     <div class="form-group">
                         @Html.LabelFor(model => model.TestID, htmlAttributes: new { @class = " control-label col-md-2" })
                         <div class="col-md-10">

                             @Html.EditorFor(model => model.TestID, new { htmlAttributes = new { @class = "k-textbox form-control", @readonly = "readonly" } })

                         </div>
                     </div>
                 </td>
                 <td>
                     <div class="form-group">
                         @Html.LabelFor(model => model.StatusID, htmlAttributes: new { @class = "control-label col-md-2" })
                         <div class="col-md-10">

                             @Html.EditorFor(model => model.CML_Status.Status, new { htmlAttributes = new { @class = "k-textbox form-control", @readonly = "readonly" } })

                         </div>
                     </div>
                 </td>

             </tr>

             <tr>
                 <td>
                     <div class="form-group">
                         @Html.LabelFor(model => model.CMLRequest, htmlAttributes: new { @class = "control-label col-md-2" })
                         <div class="col-md-10">
                             @Html.EditorFor(model => model.CMLRequest, new { htmlAttributes = new { @class = "k-textbox form-control", @readonly = "readonly" } })

                         </div>
                     </div>
                 </td>
                 <td>
                     <div class="form-group">
                         @Html.LabelFor(model => model.AssignedTo, htmlAttributes: new { @class = "control-label col-md-2" })
                         <div class="col-md-10">
                             @(Html.Kendo().DropDownListFor(model => model.AssignedTo)
                                                                                                                  .Name("AssignedTo")
                                                                                                                  .OptionLabel("Please select")
                                                                                                                  .DataTextField("Text")
                                                                                                                  .DataValueField("Value")
                                                                                                                  .BindTo(ViewData["assigneddl"] as SelectList)
                             )
                             @* @(Html.EditorFor(model => model.AssignedTo));*@
                             @Html.ValidationMessageFor(model => model.AssignedTo, "", new { @class = "text-danger" })
                         </div>
                     </div>
                 </td>
             </tr>

             <tr>
                 <td>
                     <div class="form-group">
                         @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                         <div class="col-md-10">

                             @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                         </div>
                     </div>
                 </td>
                 <td>
                     <div class="form-group">
                         @Html.LabelFor(model => model.Abbrev, htmlAttributes: new { @class = "control-label col-md-2" })
                         <div class="col-md-10">

                             @Html.EditorFor(model => model.Abbrev, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                         </div>
                     </div>
                 </td>
             </tr>
             <tr>
                 <td colspan="2">
                     <div class="form-group">
                         @Html.LabelFor(model => model.Determines, htmlAttributes: new { @class = "control-label col-md-2" })
                         <div class="col-md-10">
                             @Html.TextAreaFor(model => model.Determines, new { style = "width:100%;", @rows = "5", @cols = "100", @readonly = "readonly" })

                         </div>
                     </div>
                 </td>
             </tr>

             <tr>
                 <td>
                     <div class="form-group">
                         @Html.LabelFor(model => model.SampleType, htmlAttributes: new { @class = "control-label col-md-2" })
                         <div class="col-md-10">

                             @Html.EditorFor(model => model.SampleType, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                         </div>
                     </div>
                 </td>
                 <td>
                     <div class="form-group">
                         @Html.LabelFor(model => model.SampleSize, htmlAttributes: new { @class = "control-label col-md-2" })
                         <div class="col-md-10">

                             @Html.EditorFor(model => model.SampleSize, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                         </div>
                     </div>
                 </td>
             </tr>

             <tr>
                 <td colspan="2">
                     <div class="form-group">
                         @Html.LabelFor(model => model.TotalSamples, htmlAttributes: new { @class = "control-label col-md-2" })
                         <div class="col-md-10">

                             @Html.EditorFor(model => model.TotalSamples, new { htmlAttributes = new { @class = "k-textbox form-control", @readonly = "readonly" } })

                         </div>
                     </div>
                 </td>
             </tr>
             <tr>
                 <td colspan="2">
                     <div class="form-group">
                         @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label col-md-2" })
                         <div class="col-md-10">
                             @Html.TextAreaFor(model => model.Comments, new { style = "width:100%;", @rows = "5", @cols = "100"})

                         </div>
                     </div>
                 </td>
             </tr>
         </table>

         @(Html.Kendo().TabStrip()
                                                                 .Name("TestsTab")
                                                                 .TabPosition(TabStripTabPosition.Left)
                                                                 .Animation(a =>
                                                                 {
                                                                     a.Open(config =>
                                                                     {
                                                                         config.Fade(FadeDirection.In);
                                                                     });
                                                                 })
                                                                 .SelectedIndex(0)
                                                                 .Items(items =>
                                                                 {
                                                                     items.Add()
                                                                     .Text("Samples")
                                                                      .Content(Html.Partial("~/Views/Test/_SamplesList.cshtml").ToHtmlString());
                                                                           items.Add()
                                                                   .Text("Turnaround")
                                                                    .Content(@<text>
                                                                     Turnaround
                                                                 </text>);
                                                                      items.Add()
                                                                    .Text("Notes")
                                                                     .Content(@<text>
                                                                         <table>
                                                                                                            <tr>
                                                                                                                <td>
                                                                                                                    <div class="form-group">
                                                                                                                        @Html.LabelFor( model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" } )
                                                                                                                        <div class="col-md-10">
                                                                                                                            @Html.TextAreaFor( model => model.Note, new { style = "width:100%;", @rows = "5", @cols = "100" } )
                                                                                                                            
                                                                                                                        </div>
                                                                                                                    </div>
                                                                                                                </td>
                                                                                                            </tr>
                                                                                                            <tr>
                                                                                                                <td>
                                                                                                                    @foreach(var note in Model.TestNotes)
                                                                                                                    {
                                                                                                                        <div class="form-group">
                                                                                                                            <span style="font-weight:bold;font-size:small;">@Html.DisplayFor(m => note.CreatedOn) @Html.DisplayFor(m => note.CreatedBy) </span>
                                                                                                                            <div class="col-md-10">
                                                                                                                                @Html.DisplayFor(m => note.NoteText)
                                                                                                                            </div>
                                                                                                                        </div>
                                                                                                                    }
                                                                                                                </td>
                                                                                                            </tr>
                                                                                                        </table>        
                                                                     </text>);
    items.Add()
                                                     .Text("Attachments")
                                                      .Content( Html.Partial( "~/Views/Files/_FilesUpload.cshtml", Model.Attachments ).ToHtmlString() );
items.Add()
 .Text("Misc")
  .Content(@<text>
         
         <table>
             <tr>
                 <td>
                     <div class="form-group">
                         @Html.LabelFor(model => model.CreatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                         <div class="col-md-10">

                             @Html.EditorFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "k-textbox form-control", @readonly = "readonly" } })

                         </div>
                     </div>
                 </td>
                 <td>
                     <div class="form-group">
                         @Html.LabelFor(model => model.CreatedOn, htmlAttributes: new { @class = "control-label col-md-2" })
                         <div class="col-md-10">

                             @Html.EditorFor(model => model.CreatedOn, new { htmlAttributes = new { @class = "k-textbox form-control", @readonly = "readonly" } })

                         </div>
                     </div>
                 </td>
             </tr>
             <tr>
                 <td>
                     <div class="form-group">
                         @Html.LabelFor(model => model.UpdatedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                         <div class="col-md-10">

                             @Html.EditorFor(model => model.UpdatedBy, new { htmlAttributes = new { @class = "k-textbox form-control", @readonly = "readonly" } })

                         </div>
                     </div>
                 </td>
                 <td>
                     <div class="form-group">
                         @Html.LabelFor(model => model.UpdatedOn, htmlAttributes: new { @class = "control-label col-md-2" })
                         <div class="col-md-10">

                             @Html.EditorFor(model => model.UpdatedOn, new { htmlAttributes = new { @class = "k-textbox form-control", @readonly = "readonly" } })

                         </div>
                     </div>
                 </td>
             </tr>
         </table>
         
                                                                </text>);



                              })

         )




         @Html.HiddenFor(model => model.IsFromRequest)
         @Html.HiddenFor(model => model.SaveAndStay)
     </div>
        
    }

</body>
</html>
<script>
    $(document).ready(function () {


        var fromRequest = $('#IsFromRequest').val();
        
        if (fromRequest == "True") {
            $('#btnTest').hide();
            $('#btnRequest').show();
        } else {
            $('#btnTest').show();
            $('#btnRequest').hide();
        }

        $('#btnSub').click(function (e) {
            
            $('#SaveAndStay').val("False");
            $('#testForm').submit();
        })
        $('#btnSave').click(function (e) {
            $('#SaveAndStay').val("True");
            $('#testForm').submit();
        })
            
    });

    function checkSubmit(e) {
        alert('clicked');
        
      //  $('#testForm').submit();
    }
</script>
